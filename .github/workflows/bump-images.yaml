name: Bump images on tag push
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-*"

permissions:
  id-token: write # This is required for requesting the JWT token
  contents: write # This is required for actions/checkout
  pull-requests: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        # if: github.event_name == 'push' && github.ref_type == 'tag'
        run: echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT

  build-validator:
    needs: setup
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: central-application-connectivity-validator
      dockerfile: Dockerfile
      context: components/central-application-connectivity-validator
      tags: |
        ${{ needs.setup.outputs.tag }}

  build-cra:
    needs: setup
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: compass-runtime-agent
      dockerfile: Dockerfile
      context: components/compass-runtime-agent
      tags: |
        ${{ needs.setup.outputs.tag }}

  build-gateway:
    needs: setup
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: central-application-gateway
      dockerfile: Dockerfile
      context: components/central-application-gateway
      tags: |
        ${{ needs.setup.outputs.tag }}

  bump-images:
    runs-on: ubuntu-latest
    needs: setup
    env:
      version: ${{ needs.setup.outputs.tag }}
      images: >-
        [
            "europe-docker.pkg.dev/kyma-project/prod/application-connector-manager",
            "europe-docker.pkg.dev/kyma-project/prod/central-application-connectivity-validator",
            "europe-docker.pkg.dev/kyma-project/prod/central-application-gateway",
            "europe-docker.pkg.dev/kyma-project/prod/compass-runtime-agent"
        ]
    steps:
      - uses: actions/checkout@v4
      - name: Prepare git
        run: |
          git config user.name "${{ vars.GH_BOT_NAME }}"
          git config user.email "${{ vars.GH_BOT_MAIL }}"

          git fetch origin
          git checkout -f autobump/images
          git reset --hard origin/main
      - name: Bump application-connector.yaml images
        run: |
          yq -i \
              '(select(.kind == "Deployment").spec.template.spec.containers[].image
              | env(images) as $images
              | select(. | sub(":[\w\d\.]+$", "") as $img | $images | contains([$img])))
              |= sub(":[\w\d\.]+$", ":" + strenv(version))' application-connector.yaml
      - name: Bump security images
        run: |
          # clear BDBA list
          yq -i '.bdba = []' ./sec-scanners-config.yaml

          # add latest and versioned images to BDBA list
          yq -P -i \
              '(env(images) | map(. + ":latest")) as $latest
              | (env(images) | map(. + ":" + strenv(version))) as $versioned
              | .bdba |= $latest + $versioned
              | .bdba |= sort' ./sec-scanners-config.yaml
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        run: |
          git add ./sec-scanners-config.yaml ./application-connector.yaml
          if git diff-index --quiet HEAD; then
            echo "No changes detected - no action required"
            exit 0
          fi
          git commit -m "Bump images"
          git push -f -u origin autobump/images
          {
              echo '[![ACM](https://github.com/kyma-project/application-connector-manager/actions/workflows/acm.yaml/badge.svg?branch=main&event=push)](https://github.com/kyma-project/application-connector-manager/actions/workflows/acm.yaml) [![Bump images on tag push](https://github.com/kyma-project/application-connector-manager/actions/workflows/bump-images.yaml/badge.svg?event=push)](https://github.com/kyma-project/application-connector-manager/actions/workflows/bump-images.yaml)'
              echo '# Bumped images'
              echo $images | yq -P '.[]' | xargs -I'%' echo "- \`%:${version}\`"
          } > pr-description.md
          gh pr create --base main --head autobump/images -F pr-description.md -t "Bump images to $version"
